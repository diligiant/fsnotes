# SYSTEM

## ZSH
### prelim
`sudo apt install software-properties-common curl zsh git tmux keychain fasd`
`git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install`

### oh-my-zsh
`sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"`
`git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k`
`git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k`
`git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions`
`git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting`
`git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:=~/.oh-my-zsh/custom}/plugins/zsh-completions`

## TAILSCALE
	https://tailscale.com/download/linux/ubuntu-2004

## RAID
### HP
#### smart - https://documentation.online.net/fr/dedicated-server/rescue/diagnosis-defective-disk
`sudo ssacli ctrl all show config`
`sudo smartctl -l selftest /dev/sda`
##### test
`sudo smartctl -t short /dev/sda`
`sudo smartctl -t long /dev/sda`
	
### DELL H710
`curl -fsSL http://hwraid.le-vert.net/ubuntu/hwraid.le-vert.net.gpg.key | sudo apt-key add -`
`sudo apt-get install smartmontools`
https://documentation.online.net/fr/dedicated-server/hardware/raid/card-dell-perc-h700

## SSH

`ssh-copy-id`
`sudo vi /etc/ssh/sshd_config`
	append `PasswordAuthentication no`

## LIVE KERNEL PATCHES
To enable live kernel patches on an Ubuntu machine, open a terminal and enter:
`sudo apt install snapd`
`sudo snap install canonical-livepatch`
`sudo canonical-livepatch enable 3aae967283654948b1c5d2e20a305b1b`

## IPv6
((( attention au nom de l’interface  )))
https://documentation.online.net/fr/dedicated-server/network/ipv6/prefix

1. ADD to `/etc/netplan/01-netcfg.yaml`
 dhcp6: no
      addresses:
      - 2001:0bc8:208b:x00::1/48
      nameservers:
        addresses:
        - 2606:4700:4700::1001
        - 2606:4700:4700::1111
        - 1.1.1.1
        - 1.0.0.1
        - 9.9.9.9

lievre - enp2s0 / 00:03:00:01:1f:ad:02:71:45:3a
lapin - eno1 / 00:03:00:01:61:d1:de:4c:4b:5e
rapeti - eno1 / 00:03:00:01:71:4b:91:36:67:1a
lop - eno1 / 00:03:00:01:5a:8a:58:5c:15:2a


2. CREATE ‘/etc/systemd/networkd.conf’
```
DUIDType=vendor
DUIDRawData=00:03:00:01:1f:ad:02:71:45:3a;
```

3. CREATE `/etc/dhcp/dhclient6.conf`
((( 00:03 is online.net DUID )))
```
interface "enp2s0" {
   send dhcp6.client-id 00:03:00:01:1f:ad:02:71:45:3a;
}
```

4. CREATE `/etc/systemd/system/dhclient.service`
```
[Unit]
Description=dhclient for sending DUID IPv6
Wants=network.target
Before=network.target

[Service]
Type=forking
ExecStart=/sbin/dhclient -cf /etc/dhcp/dhclient6.conf -6 -P -v enp2s0

[Install]
WantedBy=multi-user.target
```

5. DO
sudo systemctl enable dhclient.service
sudo dhclient -cf /etc/dhcp/dhclient6.conf -6 -P -v enp2s0
       sudo netplan apply
       ping6 ipv6.google.com


OLD OLD OLD
ADD IN `/etc/network/interfaces.d` a file named ?? `enp2s0-inet6` ??
[::1 pour lievre, ::2 pour lapin [na for lapin - betplan only]]
```
iface enp2s0 inet6 static
    address 2001:0bc8:208b:100::1
    netmask 48
    accept_ra 1
```
lievre - enp2s0 / 2001:0bc8:208b:100::1
lapin -  eno1 / 2001:0bc8:208b:200::1
rapeti -  eno1 / 2001:0bc8:208b:300::1
lop -  eno1 / 2001:0bc8:208b:400::1
belier -  eno1 / 2001:0bc8:208b:500::1

PACKAGES
tidbits
`sudo apt install zip unzip htop libpcre++-dev zlib1g-dev`
`env GO111MODULE=on go get -u -v moul.io/assh/v2`
```

	OLD OLD OLD
	ADD IN ~/.bashrc
	```
	fasd_cache="$HOME/.fasd-init-bash"
	if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
	  fasd --init posix-alias bash-hook bash-ccomp bash-ccomp-install >| "$fasd_cache"
	fi
	source "$fasd_cache"
	unset fasd_cache
	```

Wireguard
	https://www.wireguard.com/install/
	https://www.wireguard.com/quickstart/

	sudo apt install software-properties-common
	sudo add-apt-repository ppa:wireguard/wireguard
	sudo apt-get update
	sudo apt-get install wireguard

RESTART
## first time
    1. sudo ip link add dev wg0 type wireguard
    2. sudo ip address add 10.0.0.3/24 dev wg0 (was sudo ip address add dev wg0 10.0.0.1 peer 10.0.0.2)
    3. wg genkey > private
    4. wg pubkey < private
    5. sudo wg set wg0 private-key private peer JDWj8Dd8CtfGEk7XIhfi5bZFnbiGdN/oIJgrvQPcmHE= endpoint 62.210.199.57:56251 allowed-ips 10.0.0.1/32
    6. sudo ip link set wg0 up
    7. sudo wg showconf wg0 > wg0.conf
    8. sudo chown root:root wg0.conf && sudo chmod go-rw wg0.conf && sudo mv wg0.conf /etc/wireguard

#
# CREATE /etc/wireguard/wg0.conf
[Interface]
Address = 10.0.0.1/24
ListenPort = 56251
PrivateKey = PRIVATE

[Peer]
PublicKey = OGikC2CrGh2+jOw51gj8xV2Ldljqb6gHqutDpHJ4KlU=
AllowedIPs = 10.0.0.2/32
Endpoint = 195.154.184.172:37762

[Peer]
PublicKey = 8oWrfCxkW0b9zOAJ0NrcfHY+jrrZDthE9mdTc0zoEg0=
AllowedIPs = 10.0.0.3/32
Endpoint = 62.210.125.54:38923

[Peer]
PublicKey = riXJ/9b3HFBzAhXb01VbgGssbrw79wpukufBtvo1pz4=
AllowedIPs = 10.0.0.4/32
Endpoint = 62.210.217.5:34681

[Peer]
PublicKey = ObSLlNgq60ltShj87ntTEOTOUerqfcDak8xJN0v9xSs=
AllowedIPs = 10.0.0.5/32
Endpoint = 62.210.246.19:56046

#
sudo wg-quick up wg0
      sudo systemctl enable wg-quick@wg0


Docker
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
sudo apt update
sudo apt install docker-ce
        
	sudo usermod -aG docker ${USER}
	logout … ssh

transmission (https://help.ubuntu.com/community/TransmissionHowTo)
	sudo add-apt-repository ppa:transmissionbt/ppa
	sudo apt-get install transmission-daemon
	sudo systemctl stop transmission-daemon
	
	sudo vi /var/lib/transmission-daemon/info/settings.json
	[ou /etc/transmission-daemon/settings.json]
		CHANGE
			“download-dir" -> "/home/frederic/bt/files" or “/data/bt/files”
[or /data/bt/files]
			"rpc-username" -> "mi-shu-ni-chas"
			"rpc-password" -> "jaxa6thux1chyw"
		ADD
			"watch-dir": "/home/frederic/bt/watch",
			"watch-dir-enabled": true

	sudo vi  /etc/sysctl.d/66-transmission.conf
		ADD
			# https://unix.stackexchange.com/questions/520625/transmission-daemon-udp-failed-to-set-receive-send-buffer
			# https://falkhusemann.de/2012/07/27/transmission-utp-and-udp-buffer-optimizations/
			#
			net.core.rmem_max = 16777216
			net.core.wmem_max = 4194304
         sudo  sysctl --system

	sudo systemctl start transmission-daemon
	
pure-FTPd
	groupadd _pure-ftpd
	useradd -g _pure-ftpd -d /var/empty -s /etc _pure-ftpd

	# download and install latest openssl
	sudo apt install libssl-dev

	./configure --with-tls --with-puredb --with-altlog --with-virtualchroot --sysconfdir=/etc --prefix=/opt/pure-ftpd-1.0.49

	lievre-stuff/etc_init.d_pure-ftpd -> /etc/init.d/pure-ftpd
	

nginx (https://www.nginx.com/resources/wiki/start/topics/tutorials/install/#official-debian-ubuntu-packages)
	ADD “[arch=amd64]” after deb in /etc/apt/sources.list.d/nginx.list

	certbot (https://certbot.eff.org/all-instructions/#ubuntu-16-04-xenial-none-of-the-above)
	letsencrypt : backup /etc/letsencrypt
		ADD to /etc/letsencrypt/cli.ini
			rsa-key-size = 4096
			must-staple = true
			hsts = true
			uir = true
			staple-ocsp = true

	-=-=-
	nginx -V =>
./configure —prefix=/opt/nginx-1.15.9 --with-http_gzip_static_module --with-http_ssl_module --with-http_v2_module --with-openssl=/home/frederic/src/openssl-1.1.1b --with-pcre=/home/frederic/src/pcre-8.42 --with-zlib=/home/frederic/src/zlib-1.2.11 --add-module=/home/frederic/src/headers-more-nginx-module --add-module=/home/frederic/src/ngx_brotli

go (https://golang.org/doc/install)
       snap install go
	add to .profile
		export PATH=$PATH:/usr/local/go/bin

resilio (https://help.resilio.com/hc/en-us/articles/206178924)
	/etc/resilio-sync/config.json

postgresql  (https://www.postgresql.org/download/linux/ubuntu/)
	apt-get install postgresql-10 postgresql-10-postgis-2.4
	sudo -u postgres /usr/lib/postgresql/10/bin/pg_ctl -D /var/lib/postgresql/10/main -l /var/log/postgresql/postgresql-10-main.log start

postfix (https://help.ubuntu.com/community/Postfix ; )

node (https://tecadmin.net/install-latest-nodejs-npm-on-ubuntu/)

Nfs setup
https://linuxconfig.org/how-to-configure-a-nfs-file-server-on-ubuntu-18-04-bionic-beaver
https://help.ubuntu.com/community/SettingUpNFSHowTo

On server, after
	sudo exportfs -ra

on nfs-client
	sudo apt install nfs-common
        


startup stuff is in
/etc/init.d & /lib/systemd/system